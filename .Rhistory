modelo1<-with(tablaN, lm(Y~(A+E+F)^2))
anova1<-aov(modelo1)
summary(anova1)
modelo1
summary(modelo1)
library(readr)
Datos_p1 <- read_csv("Datos_p1.csv")
View(Datos_p1)
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
library(qcc)
library(readr)
Datos_p1 <- read_csv("Datos_p1.csv")
#SI PIDEN CONFIANZA
alfa <- 0.01
za <- round(qnorm(1-alfa/2),3)
library(readr)
datos <- read_csv("Datos_p1.csv")
index <- 1:nrow(datos)
alfa <- 0.01
za <- round(qnorm(1-alfa/2),3)
qcc?
q1 <- with(datos, qcc(D, sizes = x, type = "p", nsigmas = za))
q1 <- with(datos, qcc(D, sizes = n, type = "p", nsigmas = za))
plot(q1)
q1$violations
z <- q1$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
names(z[z==1])
fuera<- as.numeric(names(z[z==1]))
fuera
index2 <- index[-fuera]
datos2 <- datos[index2,]
q2 <- with(datos2, qcc(D, sizes = x, type = "p"))
index2 <- index[-fuera]
datos2 <- datos[index2,]
q2 <- with(datos2, qcc(D, sizes = n, type = "p"))
plot(q2)
index2 <- index[-fuera]
datos2 <- datos[index2,]
q2 <- with(datos2, qcc(D, sizes = n, type = "p"))
plot(q2)
operarios <- rep(rep(1:4, c(4,4,4,4)),2)
operarios <- rep(rep(1:4, c(4,4,4,4)),2)
operarios
operarios <- rep(rep(1:4, c(4,4,4,4)),3)
operarios
operarios <- rep(rep(1:4, c(4,4,4,4)),3)
datos$operarios <- operarios
operarios
datos
operarios <- rep(rep(1:4, c(4,4,4,4)),3)
datos$operarios <- operarios
datos$muestra <- 1:length(datos)
library(qcc)
library(readr)
datos <- read_csv("Datos_p1.csv")
datos <- as.data.frame(datos)
index <- 1:nrow(datos)
alfa <- 0.01
za <- round(qnorm(1-alfa/2),3)
q1 <- with(datos, qcc(D, sizes = n, type = "p", nsigmas = za))
plot(q1)
q1$violations
z <- q1$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
names(z[z==1])
fuera<- as.numeric(names(z[z==1]))
fuera
index2 <- index[-fuera]
datos2 <- datos[index2,]
q2 <- with(datos2, qcc(D, sizes = n, type = "p"))
plot(q2)
operarios <- rep(rep(1:4, c(4,4,4,4)),3)
datos$operarios <- operarios
datos$muestra <- 1:length(datos)
operarios
fuera2 <- datos$muestra[datos$operarios==3]
fuera<- c(fuera, fuera2)
fuera
datos
operarios <- rep(rep(1:4, c(4,4,4,4)),3)
datos$operarios <- operarios
datos$muestra <- 1:nrow(datos)
operarios
fuera2 <- datos$muestra[datos$operarios==3]
fuera<- c(fuera, fuera2)
fuera
library(readr)
datos <- read_csv("Datos_p1.csv")
datos <- as.data.frame(datos)
index <- 1:nrow(datos)
alfa <- 0.01
za <- round(qnorm(1-alfa/2),3)
q1 <- with(datos, qcc(D, sizes = n, type = "p", nsigmas = za))
plot(q1)
index2 <- index[-fuera]
q1$violations
z <- q1$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
names(z[z==1])
fuera<- as.numeric(names(z[z==1]))
fuera
index2 <- index[-fuera]
datos2 <- datos[index2,]
q2 <- with(datos2, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q2)
operarios <- rep(rep(1:4, c(4,4,4,4)),3)
datos$operarios <- operarios
datos$muestra <- 1:nrow(datos)
operarios
fuera2 <- datos$muestra[datos$operarios==3]
fuera<- c(fuera, fuera2)
fuera
index3 <- index[-fuera2]
datos3 <- datos[index3,]
q3 <- with(datos3, qcc(D, sizes = x, type = "p",nsigmas = za))
index3 <- index[-fuera2]
datos3 <- datos[index3,]
q3 <- with(datos3, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
q3$violations
z <- q3$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
z <- as.numeric(names(z[z==1]))
fuera3 <- index3[z]
fuera<- c(fuera, fuera3)
fuera
library(qcc)
library(readr)
datos <- read_csv("Datos_p1.csv")
datos <- as.data.frame(datos)
index <- 1:nrow(datos)
alfa <- 0.01
za <- round(qnorm(1-alfa/2),3)
q1 <- with(datos, qcc(D, sizes = n, type = "p", nsigmas = za))
plot(q1)
q1$violations
z <- q1$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
names(z[z==1])
fuera<- as.numeric(names(z[z==1]))
fuera
index2 <- index[-fuera]
datos2 <- datos[index2,]
q2 <- with(datos2, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q2)
operarios <- rep(rep(1:4, c(4,4,4,4)),3)
datos$operarios <- operarios
datos$muestra <- 1:nrow(datos)
operarios
fuera2 <- datos$muestra[datos$operarios==3]
fuera<- c(fuera2)
fuera
index3 <- index[-fuera]
datos3 <- datos[index3,]
q3 <- with(datos3, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
q3$violations
z <- q3$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
z <- as.numeric(names(z[z==1]))
fuera3 <- index3[z]
fuera<- c(fuera, fuera3)
fuera
index4 <- index[-fuera]
datos4 <- datos[index4,]
q3 <- with(datos4, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
media <- round(q1&center,3)
index4 <- index[-fuera]
datos4 <- datos[index4,]
q4 <- with(datos4, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
media <- round(q4&Center,3)
media <- round(q4&center,3)
summary(q4)
var <- round(0.158*(1-0.158)/30)
var <- round(0.158*(1-0.158)/30)
var
var <- round(0.158*(1-0.158)/35)
var
var <- round(0.158*(1-0.158)/48)
var
install.packages("randtests")
library(randtests) #para realizar el test de rachas
datos$x<-datos$D/datos$n
x<-datos$x[-fuera]
(y<-as.numeric(x>mean(x)))
rr<-runs.test(y,alternative="left.sided",threshold=0.5,pvalue="exact",plot="T")
var <- round(0.158*(1-0.158)/n)
var <- round(0.158*(1-0.158)/length(datos))
var
var <- round(0.158*(1-0.158)/length(datos),3)
var
library(readr)
Datos_p1E <- read_csv("Datos_p1E.csv")
View(Datos_p1E)
datose <- read_csv("Datos_p1E.csv")
ndatos <- rbind(datos,datose)
library(readr)
datos <- read_csv("Datos_p1.csv")
datos <- as.data.frame(datos)
datosx <- as.data.frame(datos)
index <- 1:nrow(datos)
alfa <- 0.01
za <- round(qnorm(1-alfa/2),3)
q1 <- with(datos, qcc(D, sizes = n, type = "p", nsigmas = za))
plot(q1)
q1$violations
z <- q1$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
names(z[z==1])
fuera<- as.numeric(names(z[z==1]))
fuera
index2 <- index[-fuera]
datos2 <- datos[index2,]
q2 <- with(datos2, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q2)
operarios <- rep(rep(1:4, c(4,4,4,4)),3)
datos$operarios <- operarios
datos$muestra <- 1:nrow(datos)
operarios
fuera2 <- datos$muestra[datos$operarios==3]
fuera<- c(fuera2)
fuera
index3 <- index[-fuera]
datos3 <- datos[index3,]
q3 <- with(datos3, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
q3$violations
z <- q3$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
z <- as.numeric(names(z[z==1]))
fuera3 <- index3[z]
fuera<- c(fuera, fuera3)
fuera
index4 <- index[-fuera]
datos4 <- datos[index4,]
q4 <- with(datos4, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
var <- round(0.158*(1-0.158)/length(datos),3)
var
library(readr)
datos <- read_csv("Datos_p1.csv")
datos <- as.data.frame(datos)
datosx <- as.data.frame(datos)
index <- 1:nrow(datos)
alfa <- 0.01
za <- round(qnorm(1-alfa/2),3)
q1 <- with(datos, qcc(D, sizes = n, type = "p", nsigmas = za))
plot(q1)
q1$violations
z <- q1$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
names(z[z==1])
fuera<- as.numeric(names(z[z==1]))
fuera
index2 <- index[-fuera]
datos2 <- datos[index2,]
q2 <- with(datos2, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q2)
operarios <- rep(rep(1:4, c(4,4,4,4)),3)
datos$operarios <- operarios
datos$muestra <- 1:nrow(datos)
operarios
fuera2 <- datos$muestra[datos$operarios==3]
fuera<- c(fuera2)
fuera
index3 <- index[-fuera]
datos3 <- datos[index3,]
q3 <- with(datos3, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
index4 <- index[-fuera]
datos4 <- datos[index4,]
q4 <- with(datos4, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
fuera3
q3$violations
z <- q3$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
z <- as.numeric(names(z[z==1]))
fuera3 <- index3[z]
fuera<- c(fuera, fuera3)
fuera
index3 <- index[-fuera]
datos3 <- datos[index3,]
q3 <- with(datos3, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
library(readr)
datos <- read_csv("Datos_p1.csv")
datos <- as.data.frame(datos)
datosx <- as.data.frame(datos)
index <- 1:nrow(datos)
alfa <- 0.01
za <- round(qnorm(1-alfa/2),3)
q1 <- with(datos, qcc(D, sizes = n, type = "p", nsigmas = za))
plot(q1)
q1$violations
z <- q1$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
names(z[z==1])
fuera<- as.numeric(names(z[z==1]))
fuera
index2 <- index[-fuera]
datos2 <- datos[index2,]
q2 <- with(datos2, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q2)
operarios <- rep(rep(1:4, c(4,4,4,4)),3)
datos$operarios <- operarios
datos$muestra <- 1:nrow(datos)
operarios
fuera2 <- datos$muestra[datos$operarios==3]
fuera<- c(fuera2)
fuera
index3 <- index[-fuera]
datos3 <- datos[index3,]
q3 <- with(datos3, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
q3$violations
z <- q3$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
z <- as.numeric(names(z[z==1]))
fuera3 <- index3[z]
fuera<- c(fuera, fuera3)
fuera
index4 <- index[-fuera]
datos4 <- datos[index4,]
q4 <- with(datos4, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
fuera
fuera3
q3$violations
z <- q3$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
z <- as.numeric(names(z[z==1]))
fuera3 <- index3[z]
fuera<- c(fuera3, fuera)
fuera
index4 <- index[-fuera]
datos4 <- datos[index4,]
q4 <- with(datos4, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
library(readr)
datos <- read_csv("Datos_p1.csv")
datos <- as.data.frame(datos)
datosx <- as.data.frame(datos)
index <- 1:nrow(datos)
alfa <- 0.01
za <- round(qnorm(1-alfa/2),3)
q1 <- with(datos, qcc(D, sizes = n, type = "p", nsigmas = za))
plot(q1)
q1$violations
z <- q1$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
names(z[z==1])
fuera<- as.numeric(names(z[z==1]))
fuera
index2 <- index[-fuera]
datos2 <- datos[index2,]
q2 <- with(datos2, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q2)
operarios <- rep(rep(1:4, c(4,4,4,4)),3)
datos$operarios <- operarios
datos$muestra <- 1:nrow(datos)
operarios
fuera2 <- datos$muestra[datos$operarios==3]
fuera<- c(fuera2)
fuera
index3 <- index[-fuera]
datos3 <- datos[index3,]
q3 <- with(datos3, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
q3$violations
z <- q3$violations
z[is.na(z)] <- 0
names(z) <- 1:length(z)
z <- as.numeric(names(z[z==1]))
fuera3 <- index3[z]
fuera<- c(fuera3, fuera)
fuera
index4 <- index[-fuera]
datos4 <- datos[index4,]
q4 <- with(datos4, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q3)
index4 <- index[-fuera]
datos4 <- datos[index4,]
q4 <- with(datos4, qcc(D, sizes = n, type = "p",nsigmas = za))
plot(q4)
var <- round(0.158*(1-0.158)/length(datos),3)
var
datose <- read_csv("Datos_p1E.csv")
ndatos <- rbind(datos,datose)
datose <- read_csv("Datos_p1E.csv")
ndatos <- rbind(datosx,datose)
q4 <- with(ndatos, qcc(D[trial], sizes = x[trial], type = "p", nsigmas = za, newdata = D[!trial], newsizes = x[!trial]))
datose <- read_csv("Datos_p1E.csv")
ndatos <- rbind(datosx,datose)
q5 <- with(ndatos, qcc(D[1:48], sizes = n[1:48], type = "p", nsigmas = za, newdata = D[49:nrow(ndatos)], newsizes = x[49:nrow(ndatos)))
datose <- read_csv("Datos_p1E.csv")
ndatos <- rbind(datosx,datose)
q5 <- with(ndatos, qcc(D[1:48], sizes = n[1:48], type = "p", nsigmas = za, newdata = D[49:nrow(ndatos)], newsizes = x[49:nrow(ndatos))
datose <- read_csv("Datos_p1E.csv")
ndatos <- rbind(datosx,datose)
q5 <- with(ndatos, qcc(D[1:48], sizes = n[1:48], type = "p", nsigmas = za, newdata = D[49:nrow(ndatos)], newsizes = x[49:nrow(ndatos)]))
datose <- read_csv("Datos_p1E.csv")
ndatos <- rbind(datosx,datose)
q5 <- with(ndatos, qcc(D[1:48], sizes = n[1:48], type = "p", nsigmas = za, newdata = D[49:nrow(ndatos)], newsizes = n[49:nrow(ndatos)]))
datose <- read_csv("Datos_p1E.csv")
ndatos <- rbind(datosx,datose)
q5 <- with(ndatos, qcc(D[1:48], sizes = n[1:48], type = "p", nsigmas = za, newdata = D[49:nrow(ndatos)], newsizes = n[49:nrow(ndatos)]))
plot(q5)
datose <- read_csv("Datos_p1E.csv")
ndatos <- rbind(datos4,datose)
datose <- read_csv("Datos_p1E.csv")
datos4x <- datos4[,c(-3,-4)]
ndatos <- rbind(datos4x,datose)
q5 <- with(ndatos, qcc(D[1:36], sizes = n[1:35], type = "p", nsigmas = za, newdata = D[36:nrow(ndatos)], newsizes = n[36:nrow(ndatos)]))
datos4x
length(datos4)
nrow(datos4)
datose <- read_csv("Datos_p1E.csv")
datos4x <- datos4[,c(-3,-4)]
ndatos <- rbind(datos4x,datose)
q5 <- with(ndatos, qcc(D[1:35], sizes = n[1:35], type = "p", nsigmas = za, newdata = D[36:nrow(ndatos)], newsizes = n[36:nrow(ndatos)]))
plot(q5)
var <- round(0.158*(1-0.158)/35,3)
var
var2 <- round(0.158*(1-0.158)/51,3)
var2
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
library(psych) # para el test KMO
library(Hmisc)
library(PerformanceAnalytics) # para usar chart.Correlation() -> correlation matrix chart
library(corpcor) # Efficient Estimation of Covariance and (Partial) Correlation
library(corrplot) # para usar corrplot() -> A visualization of a correlation matrix
library(psych) # para el test KMO
library(Hmisc)
library(PerformanceAnalytics) # para usar chart.Correlation() -> correlation matrix chart
library(corpcor) # Efficient Estimation of Covariance and (Partial) Correlation
library(corrplot) # para usar corrplot() -> A visualization of a correlation matrix
library(haven)
X3227 <- read_sav("3227.sav")
View(X3227)
library(haven)
ndatos <- read_sav("3227.sav")
ndatos<-na.omit(ndatos)
mcor<-round(cor(ndatos) , 3)
mcor
ndatos[,47]
ndatos[,110]
library(haven)
ndatos <- read_sav("3227.sav")
datos <- ndatos[,c(47,48,49,50,51,52,110,111,112,113)]
ndatos<-na.omit(ndatos)
mcor<-round(cor(ndatos) , 3)
mcor
det(mcor) # determinante matriz de correlaciones, interesa próximo a CERO
library(haven)
ndatos <- read_sav("3227.sav")
datos <- ndatos[,c(47,48,49,50,51,52,110,111,112,113)]
datos<-na.omit(datos)
mcor<-round(cor(datos) , 3)
mcor
det(mcor) # determinante matriz de correlaciones, interesa próximo a CERO
cortest.bartlett(ndatos)
cortest.bartlett(datos)
kmo.t<-KMO(mcor)
kmo.t<-KMO(mcor)
kmo.t
chart.Correlation(ndatos, histogram=TRUE, pch=19)
chart.Correlation(datos, histogram=TRUE, pch=19)
auto<-eigen(mcor)
autovalores<-round(auto$values, 3)
A<-as.matrix(auto$vectors)
n<-length(autovalores) # número de variables
varianzas<-round(autovalores/n, 3)
# Número de factores
colores<-c("darksalmon","darkolivegreen1")
bp<-barplot(autovalores, col=colores[(autovalores>1)+1])
abline(h=1, col="red")
text(x=bp,y=autovalores-0.1, labels = autovalores, col="blue")
text(x=bp,y=rep(0,7), labels = cumsum(varianzas), col="red")
NumFactores<-sum(autovalores>1)
cat("El número de factores es: ", NumFactores, "\n")
NumFactores<-sum(autovalores>1)
cat("El número de factores es: ", NumFactores, "\n")
rotacion<-"none"
AF<-factanal(datos, factors =NumFactores, rotation =rotacion,scores = "regression")
plot(loadings(AF)[,1:2], type="n", xlim=c(-1,1), ylim=c(-1,1), main=paste0("rotación: ",rotacion))
abline(v=0) # añade una línea vertical en x=0
abline(h=0) # añade una línea horizontal en y=0
text(loadings(AF)[,1:2],labels=rownames(loadings(AF)[,1:2]),cex=.9, col="blue")
rotacion<-"promax"
AF<-factanal(datos, factors =NumFactores, rotation =rotacion,scores = "regression")
plot(loadings(AF)[,1:2], type="n", xlim=c(-1,1), ylim=c(-1,1), main=paste0("rotación: ",rotacion))
abline(v=0) # añade una línea vertical en x=0
abline(h=0) # añade una línea horizontal en y=0
text(loadings(AF)[,1:2],labels=rownames(loadings(AF)[,1:2]),cex=.9, col="blue")
